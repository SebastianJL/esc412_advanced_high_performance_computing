SHELL:=/bin/bash

all: mpi_openmp cuda ex13-1 ex13-2

mpi_openmp: src/main_mpi_openmp.cpp src/tipsy.cpp
	module load cray-fftw; \
	CC -std=c++17 -I include/ -L /usr/lib/x86_64-linux-gnu/ -O2 $^ -o make-build/$@ -lfftw3_mpi -lfftw3_omp -lfftw3 -lm -lstdc++ -fopenmp

cuda: src/main_cuda.cpp src/tipsy.cpp
	module load daint-gpu; \
	module load cudatoolkit; \
	nvcc -std=c++17 -I include/  -O2 $^ -o make-build/$@ -lcudart -lcufft -lcufftw -lm -lstdc++

ex13-1: src/Exercise13-1.cu
	module load daint-gpu; \
	module load cudatoolkit; \
	nvcc -std=c++17 -I include/  -O2 $^ -o make-build/$@ -lcudart -lm -lstdc++

ex13-2: src/Exercise13-2.cu src/tipsy.cpp
	module load daint-gpu; \
	module load cudatoolkit; \
	nvcc -std=c++17 -I include/  -O2 $^ -o make-build/$@ -lcudart -lcufft -lcufftw -lm -lstdc++

cuda_mpi_openmp: main_cuda_mpi_openmp.o tipsy.o fft.o
	CC -std=c++17 -I include/  -O2 $^ -o make-build/$@ -lcudart -lcufft -lcufftw -lm -lstdc++

main_cuda_mpi_openmp.o: src/main_cuda_mpi_openmp.cpp
tipsy.o: src/tipsy.cpp
fft.o: src/fft.cu

#CC=CC -fopenmp
#export OMPI_CXX=g++-11
#CPPFLAGS=-I$(HOME)/AHPC/include -O3
#LD=$(CXX)
#.SUFFIXES: .cxx
#%.o : %.cxx
#    CC -c $(CPPFLAGS) -o $@ $<
#%.o : %.cu
#    nvcc -c $(CPPFLAGS) -o $@ $<
#assign  : main.o tipsy.o
#    CC $(CPPFLAGS) -o assign main.o tipsy.o -lcudart -lcufft -lcufftw
#transpose : transpose.cxx
#    CC $(CPPFLAGS) -o transpose transpose.cxx
#main.o : main.cu
#tipsy.o : tipsy.cxx